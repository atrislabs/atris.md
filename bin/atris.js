#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const command = process.argv[2];

if (!command) {
  console.log('Usage: atris <command>');
  console.log('Commands:');
  console.log('  init     - Initialize ATRIS in current project');
  console.log('  update   - Update local atris.md to latest version');
  console.log('  sync     - Alias for update');
  process.exit(0);
}

// Command handlers
if (command === 'init') {
  initAtris();
} else if (command === 'update' || command === 'sync') {
  syncAtris();
} else {
  console.log(`Unknown command: ${command}`);
  console.log('Run "atris" without arguments to see available commands');
  process.exit(1);
}

function initAtris() {
  const targetDir = path.join(process.cwd(), 'atris');
  const agentTeamDir = path.join(targetDir, 'agent_team');
  const sourceFile = path.join(__dirname, '..', 'atris.md');
  const targetFile = path.join(targetDir, 'atris.md');

  // Create atris/ folder structure
  if (!fs.existsSync(targetDir)) {
    fs.mkdirSync(targetDir, { recursive: true });
    console.log('✓ Created atris/ folder');
  } else {
    console.log('✓ atris/ folder already exists');
  }

  // Create agent_team/ subfolder
  if (!fs.existsSync(agentTeamDir)) {
    fs.mkdirSync(agentTeamDir, { recursive: true });
    console.log('✓ Created atris/agent_team/ folder');
  }

  // Create placeholder files
  const gettingStartedFile = path.join(targetDir, 'GETTING_STARTED.md');
  const mapFile = path.join(targetDir, 'MAP.md');
  const taskContextsFile = path.join(targetDir, 'TASK_CONTEXTS.md');
  const navigatorFile = path.join(agentTeamDir, 'navigator.md');
  const executorFile = path.join(agentTeamDir, 'executor.md');
  const validatorFile = path.join(agentTeamDir, 'validator.md');

  const gettingStartedSource = path.join(__dirname, '..', 'GETTING_STARTED.md');

  // Copy GETTING_STARTED.md
  if (!fs.existsSync(gettingStartedFile) && fs.existsSync(gettingStartedSource)) {
    fs.copyFileSync(gettingStartedSource, gettingStartedFile);
    console.log('✓ Created GETTING_STARTED.md');
  }

  if (!fs.existsSync(mapFile)) {
    fs.writeFileSync(mapFile, '# MAP.md\n\n> Generated by your AI agent after reading atris.md\n\nRun your AI agent with atris.md to populate this file.\n');
    console.log('✓ Created MAP.md placeholder');
  }

  if (!fs.existsSync(taskContextsFile)) {
    fs.writeFileSync(taskContextsFile, '# TASK_CONTEXTS.md\n\n> Generated by your AI agent after reading atris.md\n\nRun your AI agent with atris.md to populate this file.\n');
    console.log('✓ Created TASK_CONTEXTS.md placeholder');
  }

  if (!fs.existsSync(navigatorFile)) {
    fs.writeFileSync(navigatorFile, '# navigator.md\n\n> Generated by your AI agent after reading atris.md\n\nRun your AI agent with atris.md to populate this file.\n');
    console.log('✓ Created agent_team/navigator.md placeholder');
  }

  if (!fs.existsSync(executorFile)) {
    fs.writeFileSync(executorFile, '# executor.md\n\n> Generated by your AI agent after reading atris.md\n\nRun your AI agent with atris.md to populate this file.\n');
    console.log('✓ Created agent_team/executor.md placeholder');
  }

  if (!fs.existsSync(validatorFile)) {
    fs.writeFileSync(validatorFile, '# validator.md\n\n> Generated by your AI agent after reading atris.md\n\nRun your AI agent with atris.md to populate this file.\n');
    console.log('✓ Created agent_team/validator.md placeholder');
  }

  // Copy atris.md to the folder
  if (fs.existsSync(sourceFile)) {
    fs.copyFileSync(sourceFile, targetFile);
    console.log('✓ Copied atris.md to atris/ folder');
    console.log('\n✨ ATRIS initialized! Full structure created:');
    console.log('   atris/');
    console.log('   ├── GETTING_STARTED.md (read this first!)');
    console.log('   ├── atris.md (AI agent instructions)');
    console.log('   ├── MAP.md (placeholder)');
    console.log('   ├── TASK_CONTEXTS.md (placeholder)');
    console.log('   └── agent_team/');
    console.log('       ├── navigator.md (placeholder)');
    console.log('       ├── executor.md (placeholder)');
    console.log('       └── validator.md (placeholder)');
    console.log('\nNext steps:');
    console.log('1. Read atris/GETTING_STARTED.md for the full guide');
    console.log('2. Open atris/atris.md and paste it to your AI agent');
    console.log('3. Your agent will populate all placeholder files in ~10 mins');
  } else {
    console.error('✗ Error: atris.md not found in package');
    process.exit(1);
  }
}

function syncAtris() {
  const targetDir = path.join(process.cwd(), 'atris');
  const targetFile = path.join(targetDir, 'atris.md');
  const sourceFile = path.join(__dirname, '..', 'atris.md');

  // Check if atris/ folder exists
  if (!fs.existsSync(targetDir)) {
    console.error('✗ Error: atris/ folder not found. Run "atris init" first.');
    process.exit(1);
  }

  // Check if source exists
  if (!fs.existsSync(sourceFile)) {
    console.error('✗ Error: atris.md not found in package');
    process.exit(1);
  }

  // Read version from both files (assuming version is in header)
  const currentContent = fs.existsSync(targetFile) ? fs.readFileSync(targetFile, 'utf8') : '';
  const newContent = fs.readFileSync(sourceFile, 'utf8');

  if (currentContent === newContent) {
    console.log('✓ Already up to date');
    process.exit(0);
  }

  // Update the file
  fs.copyFileSync(sourceFile, targetFile);
  console.log('✓ Updated atris.md to latest version');
  console.log('\nRun your AI agent again to regenerate MAP.md and agents with the latest spec.');
}
